From 49b313f621cbe8f0732d9f86d9bf00eb5d4d15fa Mon Sep 17 00:00:00 2001
From: Ning Sun <ning.sun@intel.com>
Date: Wed, 26 Aug 2015 21:37:15 -0700
Subject: Removed some redundant codes in loader.c

to avoid pontential verified launch failures.

Signed-off-by Ning Sun <ning.sun@intel.com>
---
 tboot/common/loader.c |   50 ++----------------------------------------------
 1 files changed, 3 insertions(+), 47 deletions(-)

diff --git a/tboot/common/loader.c b/tboot/common/loader.c
index 9ac52e1..f1fd8b8 100644
--- a/tboot/common/loader.c
+++ b/tboot/common/loader.c
@@ -956,41 +956,7 @@ module_t *get_module(loader_ctx *lctx, unsigned int i)
     }
 }
 
-static const char *get_boot_loader_name(loader_ctx *lctx)
-{
-    if (LOADER_CTX_BAD(lctx))
-        return NULL;
-    if (lctx->type == MB1_ONLY ){
-        if (((multiboot_info_t *)lctx->addr)->flags & MBI_BTLDNAME)
-            return (char *)((multiboot_info_t *)lctx->addr)->boot_loader_name;
-        return NULL;
-    }
-
-    /* currently must be type 2 */
-    struct mb2_tag *start = (struct mb2_tag *)(lctx->addr + 8);
-    start = find_mb2_tag_type(start, MB2_TAG_TYPE_LOADER_NAME);
-    if (start)
-        return &((struct mb2_tag_string *)start)->string[0];
-
-    return NULL;
-}
-
-static void remove_filename_from_modules_cmdline(loader_ctx *lctx)
-{
-    if (LOADER_CTX_BAD(lctx))
-        return;
-
-    for ( unsigned int i = 0; i < get_module_count(lctx); i++ ) {
-        module_t *m = get_module(lctx, i);
-        char *cmdline = get_module_cmd(lctx, m);
-        const char *adjusted_cmdline = skip_filename(cmdline);
-        if ( adjusted_cmdline != NULL && cmdline != adjusted_cmdline )
-            strncpy(cmdline, adjusted_cmdline, strlen(cmdline));
-    }
-}
-
-static 
-void *remove_first_module(loader_ctx *lctx)
+static void *remove_first_module(loader_ctx *lctx)
 {
     if (LOADER_CTX_BAD(lctx))
         return NULL;
@@ -1003,8 +969,7 @@ void *remove_first_module(loader_ctx *lctx)
 #define MB2_TEMP_SIZE 512
 static uint32_t mb2_temp[MB2_TEMP_SIZE];
 
-static bool
-convert_mb2_to_mb1(void)
+static bool convert_mb2_to_mb1(void)
 {
     /* it's too hard to do this in place.  MB2 "data" is all inline, so
      * it can be copied to a new location, as is, and still be intact.  MB1
@@ -1279,14 +1244,6 @@ bool launch_kernel(bool is_measured_launch)
         
         /* fix for GRUB2, which may load modules into memory before tboot */
         move_modules(g_ldr_ctx);
-
-        /* for GRUB 2, remove the filename in mods' cmdline */
-        const char *loader_name = get_boot_loader_name(g_ldr_ctx);
-        if ( loader_name != NULL &&
-             !strncmp(loader_name, "GNU GRUB", 8) &&
-             strncmp(loader_name, "GNU GRUB 0", 10) )
-            remove_filename_from_modules_cmdline(g_ldr_ctx);
-
     }
     else {
         printk(TBOOT_INFO"assuming kernel is Linux format\n");
@@ -1480,8 +1437,7 @@ uint32_t get_loader_mem_upper(loader_ctx *lctx)
     return 0;
 }
 
-unsigned int 
-get_module_count(loader_ctx *lctx)
+unsigned int get_module_count(loader_ctx *lctx)
 {
     if (LOADER_CTX_BAD(lctx))
         return 0;
-- 
1.7.1

