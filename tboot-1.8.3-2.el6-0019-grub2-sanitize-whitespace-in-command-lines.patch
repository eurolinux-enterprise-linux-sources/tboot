From e41e5047a36396ae7ce352129622485c51deaf4a Mon Sep 17 00:00:00 2001
From: Martin Wilck <martin.wilck@ts.fujitsu.com>
Date: Wed, 24 Feb 2016 14:23:07 +0100
Subject: grub2: sanitize whitespace in command lines

The GRUB2 multiboot module merges series of spaces into a single space.
Do the same when generating grub.cfg in the first place.
This enable users to copy/paste command lines from grub.cfg into
lcp_crtpolelt or tb_polgen command lines, reducing the likelyhood
of typos resulting in TXT boot failure.
---
 tboot/20_linux_tboot     |   12 ++++++++++--
 tboot/20_linux_xen_tboot |   15 ++++++++++++---
 2 files changed, 22 insertions(+), 5 deletions(-)

diff --git a/tboot/20_linux_tboot b/tboot/20_linux_tboot
index 05d1366..e8d2819 100644
--- a/tboot/20_linux_tboot
+++ b/tboot/20_linux_tboot
@@ -90,6 +90,12 @@ else
   LINUX_ROOT_DEVICE=UUID=${GRUB_DEVICE_UUID}
 fi
 
+# Merge all sequences of spaces into a single space, like GRUB2 does during boot.
+# Simplistic, doesn't check for quoting, but should be good enough for the kernel command line.
+merge_spaces() {
+  echo "$*" | sed -e 's/ \{1,\}/ /g' -e 's/^ //' -e 's/ $//'
+}
+
 linux_entry ()
 {
   os="$1"
@@ -129,11 +135,13 @@ linux_entry ()
   printf '%s\n' "${prepare_boot_cache}"
   xmessage="$(gettext_printf "Loading tboot %s ..." ${tboot_version})"
   lmessage="$(gettext_printf "Loading Linux %s ..." ${version})"
+  tbargs=`merge_spaces ${rel_tboot_dirname}/${tboot_basename} ${tboot_args}`
+  lxargs=`merge_spaces ${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args} ${iommu_args} ${mb_extra_kernel}`
   cat << EOF
 	echo	'$xmessage'
-	${mb_directive}	${rel_tboot_dirname}/${tboot_basename} ${rel_tboot_dirname}/${tboot_basename} ${tboot_args}
+	${mb_directive}	${rel_tboot_dirname}/${tboot_basename} ${tbargs}
 	echo	'$lmessage'
-	${mb_mod_directive} ${rel_dirname}/${basename} ${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args} ${iommu_args} ${mb_extra_kernel}
+	${mb_mod_directive} ${rel_dirname}/${basename} ${lxargs}
 EOF
   if test -n "${initrd}" ; then
     message="$(gettext_printf "Loading initial ramdisk ...")"
diff --git a/tboot/20_linux_xen_tboot b/tboot/20_linux_xen_tboot
index 5d0a839..5de2bb4 100644
--- a/tboot/20_linux_xen_tboot
+++ b/tboot/20_linux_xen_tboot
@@ -92,6 +92,12 @@ if [ "x`${grub_probe} --device ${GRUB_DEVICE} --target=fs 2>/dev/null || true`"
   fi
 fi
 
+# Merge all sequences of spaces into a single space, like GRUB2 does during boot.
+# Simplistic, doesn't check for quoting, but should be good enough for the kernel command line.
+merge_spaces() {
+  echo "$*" | sed -e 's/ \{1,\}/ /g' -e 's/^ //' -e 's/ $//'
+}
+
 linux_entry ()
 {
   os="$1"
@@ -120,13 +126,16 @@ linux_entry ()
   xmessage="$(gettext_printf "Loading Xen %s ..." ${xen_version})"
   tmessage="$(gettext_printf "Loading Tboot %s ..." ${tboot_version})"
   lmessage="$(gettext_printf "Loading Linux %s ..." ${version})"
+  tbargs=`merge_spaces ${rel_tboot_dirname}/${tboot_basename} ${tboot_args}`
+  xnargs=`merge_spaces placeholder ${xen_args} ${iommu_args}`
+  lxargs=`merge_spaces placeholder root=${linux_root_device_thisversion} ro ${args}`
   cat << EOF
 	echo	'$tmessage'
-	multiboot	${rel_tboot_dirname}/${tboot_basename} ${rel_tboot_dirname}/${tboot_basename} ${tboot_args}
+	multiboot	${rel_tboot_dirname}/${tboot_basename} ${tbargs}
 	echo	'$xmessage'
-	module	${rel_xen_dirname}/${xen_basename} placeholder ${xen_args} ${iommu_args}
+	module	${rel_xen_dirname}/${xen_basename} ${xnargs}
 	echo	'$lmessage'
-	module	${rel_dirname}/${basename} placeholder root=${linux_root_device_thisversion} ro ${args}
+	module	${rel_dirname}/${basename} ${lxargs}
 EOF
   if test -n "${initrd}" ; then
     message="$(gettext_printf "Loading initial ramdisk ...")"
-- 
1.7.1

