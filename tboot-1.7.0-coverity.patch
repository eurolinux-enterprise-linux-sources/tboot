diff -up tboot-1.7.0/lcptools/lcputils.c.orig tboot-1.7.0/lcptools/lcputils.c
--- tboot-1.7.0/lcptools/lcputils.c.orig	2012-01-15 10:21:20.000000000 -0500
+++ tboot-1.7.0/lcptools/lcputils.c	2012-01-26 14:33:22.255169516 -0500
@@ -226,14 +226,15 @@ str_split(const char *str_in, char **str
     int num = 0;
     const char *sep = ",";
     size_t str_length = 0;
-    char *string = (char *)malloc(strlen(str_in) + 1);
+    char *string = NULL;
 
-    if ( string == NULL )
-        return -1;
     if ( str_in == NULL || str_out == NULL || number == NULL ) {
         free(string);
         return -1;
     }
+    string = (char *) malloc(strlen(str_in) + 1);
+    if ( string == NULL )
+        return -1;
     strcpy(string, str_in);
     temp =strtok(string, sep);
     if ( temp != NULL && str_out[num] )
@@ -375,9 +376,10 @@ lcp_loaddata_byte(unsigned char data, un
     if ( blob == NULL )
         return;
 
-    if ( *blob != NULL )
+    if ( *blob != NULL ) {
         **blob = data;
-    (*blob)++;
+        (*blob)++;
+    }
 }
 
 void
diff -up tboot-1.7.0/tboot/txt/acmod.c.orig tboot-1.7.0/tboot/txt/acmod.c
--- tboot-1.7.0/tboot/txt/acmod.c.orig	2012-01-15 10:21:20.000000000 -0500
+++ tboot-1.7.0/tboot/txt/acmod.c	2012-01-26 14:39:15.545169824 -0500
@@ -60,6 +60,9 @@ static acm_info_table_t *get_acmod_info_
 {
     uint32_t user_area_off;
 
+    if (hdr == NULL)
+        return NULL;
+
     /* overflow? */
     if ( plus_overflow_u32(hdr->header_len, hdr->scratch_size) ) {
         printk("ACM header length plus scratch size overflows\n");
@@ -512,6 +515,9 @@ bool does_acmod_match_platform(const acm
      * check if processor family/model/stepping and platform IDs match
      */
     acm_info_table_t *info_table = get_acmod_info_table(hdr);
+    if ( info_table == NULL )
+        return false;
+
     if ( info_table->version >= 4 ) {
         acm_processor_id_list_t *proc_id_list = get_acmod_processor_list(hdr);
         if ( proc_id_list == NULL )
